// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand{
  id            Int           @id @default(autoincrement())
  name          String
  description   String?       @db.Text
  image         BrandImage[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("brands")
}

model Category{
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  image         CategoryImage[]
  products      Product[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("categories")
}

model CategoryImage{
  id          Int           @id @default(autoincrement())
  name        String?       @unique
  url         String
  categoryId  Int?
  category    Category?     @relation(fields: [categoryId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("category_image")
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  price        Float
  sizes        Json
  reviews      Review[]
  images       ProductImage[]
  wishlists    Wishlist[]
  categories   Category[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@map("products")
}

model Gender{
  id           Int            @id @default(autoincrement())
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@map("gender")
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    Int
  content   String
  rating    Float
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
}

model BrandImage{
  id        Int      @id @default(autoincrement())
  name      String?  @unique
  url       String
  brandId   Int?
  brand     Brand?    @relation(fields: [brandId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("brand_image")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  name      String?  @unique
  url       String
  productId Int?
  product   Product? @relation(fields: [productId], references: [id])
  color     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product_image")
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("wishlists")
}